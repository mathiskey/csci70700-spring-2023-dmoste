section	.text
  global _start               ;must be declared for using gcc
_start:                       ;tell linker entry point
    
  ;move the data to registers
  mov eax, [num1]
  mov ebx, [num2]
  mov ecx, [num3]
    
  ;add the data and store to register A (eax)
  add eax, ebx
  add eax, ecx
  add eax, '0'
  mov [result], eax
    
  ;print message
  mov	edx, len         ;message length
  mov	ecx, msg         ;message to write
  mov	ebx, 1	         ;file descriptor (stdout)
  mov	eax, 4	         ;system call number (sys_write)
  int	0x80             ;call kernel
    
  ;print sum
  mov	edx, 1           ;message length
  mov	ecx, result      ;message to write
  mov	ebx, 1	         ;file descriptor (stdout)
  mov	eax, 4	         ;system call number (sys_write)
  int	0x80             ;call kernel

	
  ;End connection to Linux system
  mov	eax, 1	         ;system call number (sys_exit)
  int	0x80             ;call kernel

section	.data
  msg db "The sum of 3, 1, and 2 is "
  len equ $ - msg
  
  num1 db 3
  num2 db 1
  num3 db 2
    

section .bss           ;Uninitialized data
  result resb 1
